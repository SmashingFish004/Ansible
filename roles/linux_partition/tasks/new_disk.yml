---
- name: Scan for new disks
  become: true
  shell: echo "- - -" | sudo tee /sys/class/scsi_host/host*/scan >/dev/null

- name: Create partitions for new disks
  become: true
  community.general.parted:
    device: "/dev/{{ item }}"
    number: 1
    label: "gpt"
    flags: lvm
    state: present
    part_end: "100%"
  loop: "{{ new_disks }}"
  loop_control:
    loop_var: new_disk

- name: Create volume groups for new disks
  become: true
  community.general.lvg:
    vg: "{{ new_disk }}vg"
    pvs: "/dev/{{ new_disk }}1"
  loop: "{{ new_disks }}"
  loop_control:
    loop_var: new_disk

- name: Get the name of the volume matching new disks
  set_fact:
    volume_name: "{{ item.name }}"
  loop: "{{ morpheus['instance']['containers'][0]['server']['volumes'] }}"
  when: item.deviceName == '/dev/' ~ new_disk
  register: volume_name_results

- name: Debug the volume_name_results
  debug:
    var: volume_name_results

- name: Process each new disk and corresponding volume
  become: true
  block:
    - name: Replace / with _ and set lv_name
      set_fact:
        lv_name: "{{ volume_name | replace('/', '_') }}"
      vars:
        volume_name: "{{ item.volume_name }}"

    - name: Create logical volumes with 100% free space in vg
      community.general.lvol:
        vg: "{{ new_disk }}vg"
        lv: "{{ lv_name }}"
        size: 100%FREE

    - name: Format the logical volume with ext4
      community.general.filesystem:
        fstype: ext4
        dev: "/dev/{{ new_disk }}vg/{{ lv_name }}"

    - name: Create the target directory
      ansible.builtin.file:
        path: "{{ volume_name }}"
        state: directory
        mode: "0755"
      vars:
        volume_name: "{{ item.volume_name }}"

    - name: Mount the logical volume
      ansible.posix.mount:
        path: "{{ volume_name }}"
        src: "/dev/{{ new_disk }}vg/{{ lv_name }}"
        fstype: ext4
        state: mounted
      vars:
        volume_name: "{{ item.volume_name }}"
  loop: "{{ volume_name_results.results }}"
  loop_control:
    loop_var: item
